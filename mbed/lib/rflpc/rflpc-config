#!/bin/bash

# This file is part of rflpc. Copyright 2010-2011 Michael Hauspie
#
# rflpc is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# rflpc is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with rflpc.  If not, see <http://www.gnu.org/licenses/>.

# Author: Michael Hauspie <michael.hauspie@univ-lille1.fr>
# Created: 2011-09-23
# Time-stamp: <2012-03-21 15:23:29 (hauspie)>


# This script makes writing of makefiles easier by giving cflags and ldflags

RFLPC_DIR=`cd \`dirname $0\` && pwd`
RFLPC_LIB_DIR=$RFLPC_DIR/rflpc17xx
CONFIG_OPTIONS_FILE=$RFLPC_LIB_DIR/config/config-options.h
CONFIG_FILE=$RFLPC_LIB_DIR/config/config.h

usage()
{
    cat 1>&2 <<EOF
Usage: $1 <options>

Options are:
* --cflags  : outputs the compiler flags on stdout
* --lib     : ouputs only the library link flag (not all the -nodefaultlibs... options
* --ldflags : outputs only the link flags (and not the -lrflpc17xx)
* --libs    : concantenation of --lib and --ldflags
* --libfile : outputs the full path of the library file
* --objs    : ouput only object files names. This can be used for project where the main is defined in a library. This will allow library cyclic dependencies to be resolved correctly

EOF
}

generate_compile_flags_from_config()
{
    if ! test -f $CONFIG_OPTIONS_FILE
    then
	echo -n "-DRFLPC_CONFIG_PLATFORM_MBED"
	make -C config empty_config >& /dev/null
    fi
    grep -q PLATFORM $CONFIG_OPTIONS_FILE || echo -n " -DRFLPC_CONFIG_PLATFORM_MBED"
    echo -n " -include $CONFIG_FILE"
}

if [ $# -eq 0 ]
then
    usage $0
    exit 1
fi

CFLAGS="-mthumb -mcpu=cortex-m3 -fno-builtin -ffreestanding -Wall -Winline -O1 -I$RFLPC_DIR "
CFLAGS="$CFLAGS `generate_compile_flags_from_config`"

for arg in $*
do
    case $arg in
	--cflags)
	    echo -n $CFLAGS
	    ;;
	--ldflags)
	    echo -n "-nostdlib -L$RFLPC_DIR/rflpc17xx -Wl,-T,rflpc17xx.ld,-Map=rflpc.map "
	    ;;
	--lib)
	    echo -n "-lrflpc17xx "
	    ;;
	--libfile)
	    echo "$RFLPC_DIR/rflpc17xx/librflpc17xx.a"
	    ;;
	--libs)
	    ($0 --ldflags && $0 --lib) | tr -d '\n'
	    ;;
	*)
	    usage $0
	    ;;
    esac
done
echo ""
